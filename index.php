<?php

//  PHP СТРОКИ И ФУНКЦИИ

//  1. Создайте массив. Объедините все элементы массива в строку и распечатайте её.

/*$arr = ['blue','red','orange'];
$arr = implode(', ', $arr);

echo $arr;*/



// 2. Возьмите любой из рефератов на сервисе Яндекс.Весна. Выберите любое наиболее часто встречающееся слово. Используя функцию замены подстроки, поменяйте все вхождения отдельного слова, на это же слово заключённое в HTML-элемент mark.

/* $str = 'Тема: «Плюралистический элемент политического процесса: методология и особенности»
Легитимность власти, в первом приближении, интегрирует англо-американский тип политической культуры. Мажоритарная избирательная система символизирует идеологический англо-американский тип политической культуры, указывает в своем исследовании К.Поппер. Принимая во внимание позицию Ф.Фукуямы, борьба демократических и олигархических тенденций однозначно вызывает институциональный авторитаризм, что может привести к усилению полномочий Общественной палаты.

Англо-американский тип политической культуры иллюстрирует постиндустриализм. Понятие политического участия, особенно в условиях политической нестабильности, однозначно определяет христианско-демократический национализм. Демократия участия, как правило, вероятна. Социальная парадигма представляет собой культ личности, отмечает автор, цитируя К.Маркса и Ф.Энгельса. Политическая элита иллюстрирует субъект власти. Политическая социализация определяет тоталитарный тип политической культуры.

Бихевиоризм обретает прагматический англо-американский тип политической культуры. В данной ситуации бихевиоризм существенно символизирует субъект политического процесса. Институциализация неоднозначна. По сути, политическое учение Платона обретает гносеологический тоталитарный тип политической культуры. Конфедерация, на первый взгляд, существенно представляет собой теоретический политический процесс в современной России, на что указывают и многие другие факторы.';

$str_search = 'политического';
echo str_replace($str_search,"<mark>$str_search</mark>", $str); */

 

// 3. Используя функцию удаления HTML и PHP-тегов из строки, выведите на экран строку «<h1>Привет, мир!</h1>». Примечание: строка не должна выглядеть как заголовок первого уровня – все теги должны быть удалены.

/*$str = '<h1>Привет, мир!</h1>';

echo strip_tags($str);
*/


// 4. Используя stripos(), найдите во фразе «Ехал Грека через реку» ближайшее вхождение «ре». Работа ведется с однобайтной кодировкой.


/* $str = 'Ехал Грека через реку';
$findstring = 'ре';

echo stripos($str, $findstring); //Каждый символ кириллицы занимает 2 байта - итоговый результат 11 
*/


// 5. Найдите длину строки «Ехал Грека через реку» в однобайтной кодировке


/*
$text = 'Ехал Грека через реку'; 
echo strlen($text);
*/


// 6. Найдите длину строки «Ехал Грека через реку» в многобайтной кодировке. 


/*
$text = 'Ехал Грека через реку'; 
echo mb_strlen($text, 'utf-8');
*/


// 7. Используя встроенную функцию PHP по работе со строками, найдите количество вхождений «ре» в «Ехал Грека через реку»


/*
$text = 'Ехал Грека через реку'; 
$findstring = 'ре';
echo substr_count($text, $findstring);
*/


//  PHP МАССИВЫ И ФУНКЦИИ


// 1. Есть массив $arr = array(“first”=>45, “second”=>76, “third”=>12). Используя встроенную в PHP функцию, получить массив, элементами которого являются значениями массива $arr.


/*
$arr = array('first'=>45, 'second'=>76, 'third'=>12);

print_r(array_values($arr));
*/


// 2. Есть массив $arr = array(“first”=>45, “second”=>76, “third”=>12). Используя встроенную в PHP функцию, получить массив, элементами которого являются ключами массива $arr


/*
$arr = array('first'=>45, 'second'=>76, 'third'=>12);

print_r(array_keys($arr));
*/


// 3. Используя встроенные функции, удалите первый элемент массива $arr = [45, “тест”, 100] и добавьте в конец массива строку “тест2”. Примечание: добавление элемента в конец массива также нужно выполнить функцией.


/*
$arr = [45, 'тест', 100];
array_shift($arr);
array_push($arr, 'тест2');


print_r($arr);
*/

// 4. Переверните массив $arr = array(“first”=>45, “second”=>76, “third”=>12) при помощи встроенной в PHP функции по работе с массивами.


/*
$arr = array('first'=>45, 'second'=>76, 'third'=>12);
print_r(array_reverse($arr));
*/


// 5. Есть массив $arr = array(45, 76, 12, 12, 45, 12). Сколько элементов будет в массиве, который вернет функция array_unique().


// Ответ: 3 Элемента, 45, 76, 12. Данная функция убирает повторяющиеся значения из массива.



// PHP Математические функции


// 1. Найдите функцию, которая находит длину гипотенузы прямоугольного треугольника. Примечание: в заданиях на пользовательские функции мы писали свой вариант, но в PHP есть готовая функция

/*
echo hypot(12, 5);
*/

// 2. Используя функцию генерации случайного числа, сгенерируйте целое число в диапазоне от 45 до 234

/*
echo rand(45,234);
*/

// 3. Используя функцию генерации случайного числа, сгенерируйте дробное число в диапазоне от 45 до 234


/*
echo rand(100, 200)/100;
*/
